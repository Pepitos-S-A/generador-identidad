<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBxAvatar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FF9b2MJ+K93XQ/wgXnWGW2o4vOaIoibVeT1Zn5ZRBX7VMCBl1Xr2He1aX4705HlJeMMtD1atprnX/8DV
        zNx7ijectbtWh7NZ6MXX12+/YOn9tP1s+NyulT450IHaS7cKOOswu3czPbVPj+3G8R1Xe3EHT+o1HF5z
        RFGThtvG+uCNKnDJrqGZVy2o2Ksvyz3TQbw7Ce/W+ik7/91I29c4S7O1/0lZP+rdzJTR4WTtb8E/hTU+
        L7D9xxcHQNvPRs/taumTWgFz+3jswr/aX8UdXG9Tx57PtT7sUT9J5RqK2zFZ2JIBRZ0dr+xqVIEF+75E
        +KRaUbFZn5brdFMJJeHdKt6SG1ZcmK7aCnMvrh/1bmbK6HC09rfgs+1C/q2w/Y7L+6/tZ6PndrX0Sa2A
        uY3sVMBFbbHi7eSoc6I7Gum+KfZhh/pJKtdQX3JpSwYUdVYc18n6sIwqsM1p0vZMWbWkYrf+LvdQp/Dx
        SHi3ysNQX3N+umuvn3ttw92sm9u2dDhb+1vwxXYlf5bYfMO199L2s9Fzu30Ad69Te+HmvF30upojdj5u
        a4p92KHWukm1htpQnh2b67OmTe22bv+uHfDR+NHX9ZKaDukjHMJHJuHdqk9DfdHZ8a69fO6l9aPez21b
        Ohyu/S34anudSxmbf271rbT9bPTcrpY+qRUwt06tgO15m+yvoouR0e6q1oc96iepWEPL0VzakeKGTpo6
        0+1iOyx0/ifYJ9d/hX3+tu/F9V9iX2aqeH0NHWs5CA2ntFbBqDP4BCS8W70ncTJ7Ymo1zb205X7Wy21b
        alWstnN/C77ZXmiqY/NPre+9tp+NntvN7a4VMNeCYxf+1f4qjtv568tOz+9f7+cP6SjtRK0Pe9RPUq2G
        lpO5vGLDKg2taVh1Y1aOd628QnVqi4dg0nAQamWeLrL29kOO4JOQ8G6V56FhzdlFa6+fO6zFdx482bVz
        uFrE/hbc2Kzm1+/Nd9tomLaf7X91pwYWn1Mzy/TcwfJj6Prnuyle/sXbr1/vv799ctlJaY0BtV/VL6FQ
        Q3FTr9YWbOhstTctxW2tebxr5RWql1e/vvKKk9qqp9ku/LGmN44j4d2qPaA/Gu4GJ3OLFsd4bkBrbz54
        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
        gDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBI
        I+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQS
        HgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EB
        AKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBA
        GgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR
        8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkP
        ACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA
        0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCN
        hAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4
        AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcA
        kEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABp
        JDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbC
        AwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwA
        gDQSHgBAGgkPACCNhAcAkEbCAwBII+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAGgkPACCNhAcAkEbCAwBI
        I+EBAKSR8AAA0kh4AABpJDwAgDQSHgBAlv/++z8s4KZ105prAQAAAABJRU5ErkJggg==
</value>
  </data>
</root>